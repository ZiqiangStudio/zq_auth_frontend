import globals from 'globals';
import pluginJs from '@eslint/js';
import tseslint from 'typescript-eslint';
import pluginVue from 'eslint-plugin-vue';
import vueParser from 'vue-eslint-parser';
import eslintConfigPrettier from 'eslint-config-prettier';

export default [
  {
    ignores: ['node_modules/**', 'dist/**', '.nuxt/**', '.output/**', 'examples/**'],
  },
  {
    languageOptions: {
      parser: vueParser,
      parserOptions: {
        parser: tseslint.parser,
        sourceType: 'module',
      },
      globals: {
        ...globals.browser,
        isVue2: true,
        isVue3: true,
        useAsyncData: true,
        useLazyAsyncData: true,
        useNuxtData: true,
        refreshNuxtData: true,
        clearNuxtData: true,
        defineNuxtComponent: true,
        useNuxtApp: true,
        defineNuxtPlugin: true,
        reloadNuxtApp: true,
        useRuntimeConfig: true,
        useState: true,
        useFetch: true,
        useLazyFetch: true,
        useCookie: true,
        useRequestHeaders: true,
        useRequestEvent: true,
        useRequestFetch: true,
        setResponseStatus: true,
        setPageLayout: true,
        onNuxtReady: true,
        useRouter: true,
        useRoute: true,
        defineNuxtRouteMiddleware: true,
        navigateTo: true,
        abortNavigation: true,
        addRouteMiddleware: true,
        showError: true,
        clearError: true,
        isNuxtError: true,
        useError: true,
        createError: true,
        defineNuxtLink: true,
        useAppConfig: true,
        updateAppConfig: true,
        defineAppConfig: true,
        preloadComponents: true,
        preloadRouteComponents: true,
        prefetchComponents: true,
        loadPayload: true,
        preloadPayload: true,
        isPrerendered: true,
        onBeforeRouteLeave: true,
        onBeforeRouteUpdate: true,
        useLink: true,
        withCtx: true,
        withDirectives: true,
        withKeys: true,
        withMemo: true,
        withModifiers: true,
        withScopeId: true,
        onActivated: true,
        onBeforeMount: true,
        onBeforeUnmount: true,
        onBeforeUpdate: true,
        onDeactivated: true,
        onErrorCaptured: true,
        onMounted: true,
        onRenderTracked: true,
        onRenderTriggered: true,
        onServerPrefetch: true,
        onUnmounted: true,
        onUpdated: true,
        computed: true,
        customRef: true,
        isProxy: true,
        isReactive: true,
        isReadonly: true,
        isRef: true,
        markRaw: true,
        proxyRefs: true,
        reactive: true,
        readonly: true,
        ref: true,
        shallowReactive: true,
        shallowReadonly: true,
        shallowRef: true,
        toRaw: true,
        toRef: true,
        toRefs: true,
        triggerRef: true,
        unref: true,
        watch: true,
        watchEffect: true,
        isShallow: true,
        effect: true,
        effectScope: true,
        getCurrentScope: true,
        onScopeDispose: true,
        defineComponent: true,
        defineAsyncComponent: true,
        resolveComponent: true,
        getCurrentInstance: true,
        h: true,
        inject: true,
        nextTick: true,
        provide: true,
        useAttrs: true,
        useCssModule: true,
        useCssVars: true,
        useSlots: true,
        useTransitionState: true,
        injectHead: true,
        useHead: true,
        useSeoMeta: true,
        useHeadSafe: true,
        useServerHead: true,
        useServerSeoMeta: true,
        useServerHeadSafe: true,
        getIsDark: true,
        isDark: true,
        request: true,
        definePageMeta: true,
        $fetch: true,
        ResBody: true,
        wx: true,
        process: true,
        module: true,
      },
    },
  },
  pluginJs.configs.recommended,
  ...tseslint.configs.recommended,
  ...pluginVue.configs['flat/essential'],
  {
    rules: {
      'vue/multi-word-component-names': 1,
    },
  },
  eslintConfigPrettier,
];
